/*
 * Copyright (c) 2025 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/input_transform.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/ext_power.h>
#include <input/processors.dtsi>
#include <physical_layouts.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	chosen {
		zmk,physical-layout = &default_layout;
		zmk,underglow = &led_strip;
		//zephyr,display = &screen;
		zephyr,display = &nice_view;
	};

	default_layout: default_layout {
		compatible = "zmk,physical-layout";
		display-name = "Ferne";
		transform = <&default_transform>;
		kscan = <&kscan0>;

        keys  //                     w   h    x    y     rot    rx    ry
            = <&key_physical_attrs 100 100    0    0       0     0     0>
            , <&key_physical_attrs 100 100 1400    0       0     0     0>
			, <&key_physical_attrs 100 100  100   50       0     0     0>
            , <&key_physical_attrs 100 100  200    0       0     0     0>
            , <&key_physical_attrs 100 100  300    0       0     0     0>
            , <&key_physical_attrs 100 100  400   50       0     0     0>
            , <&key_physical_attrs 100 100  500   50       0     0     0>
            , <&key_physical_attrs 100 100  900   50       0     0     0>
            , <&key_physical_attrs 100 100 1000   50       0     0     0>
            , <&key_physical_attrs 100 100 1100    0       0     0     0>
            , <&key_physical_attrs 100 100 1200    0       0     0     0>
            , <&key_physical_attrs 100 100 1300   50       0     0     0>
            , <&key_physical_attrs 100 100  100  150       0     0     0>
            , <&key_physical_attrs 100 100  200  100       0     0     0>
            , <&key_physical_attrs 100 100  300  100       0     0     0>
            , <&key_physical_attrs 100 100  400  150       0     0     0>
            , <&key_physical_attrs 100 100  500  150       0     0     0>
            , <&key_physical_attrs 100 100  900  150       0     0     0>
            , <&key_physical_attrs 100 100 1000  150       0     0     0>
            , <&key_physical_attrs 100 100 1100  100       0     0     0>
            , <&key_physical_attrs 100 100 1200  100       0     0     0>
            , <&key_physical_attrs 100 100 1300  150       0     0     0>
            , <&key_physical_attrs 100 100  100  250       0     0     0>
            , <&key_physical_attrs 100 100  200  200       0     0     0>
            , <&key_physical_attrs 100 100  300  200       0     0     0>
            , <&key_physical_attrs 100 100  400  250       0     0     0>
            , <&key_physical_attrs 100 100  500  250       0     0     0>
            , <&key_physical_attrs 100 100  900  250       0     0     0>
            , <&key_physical_attrs 100 100 1000  250       0     0     0>
            , <&key_physical_attrs 100 100 1100  200       0     0     0>
            , <&key_physical_attrs 100 100 1200  200       0     0     0>
            , <&key_physical_attrs 100 100 1300  250       0     0     0>
            , <&key_physical_attrs 100 100  100  350       0     0     0>
            , <&key_physical_attrs 100 100  200  300       0     0     0>
            , <&key_physical_attrs 100 100  300  300       0     0     0>
            , <&key_physical_attrs 100 100  400  350       0     0     0>
            , <&key_physical_attrs 100 100  500  350       0     0     0>
            , <&key_physical_attrs 100 100  900  350       0     0     0>
            , <&key_physical_attrs 100 100 1000  350       0     0     0>
            , <&key_physical_attrs 100 100 1100  300       0     0     0>
            , <&key_physical_attrs 100 100 1200  300       0     0     0>
            , <&key_physical_attrs 100 100 1300  350       0     0     0>
            , <&key_physical_attrs 100 100  200  400       0     0     0>
            , <&key_physical_attrs 100 100  300  400       0     0     0>
            , <&key_physical_attrs 100 100 1100  400       0     0     0>
            , <&key_physical_attrs 100 100 1200  400       0     0     0>
            , <&key_physical_attrs 150 100  450  500       0     0     0>
            , <&key_physical_attrs 150 100  900  500       0     0     0>
            , <&key_physical_attrs 150 100  500  600       0     0     0>
            , <&key_physical_attrs 150 100  850  600       0     0     0>
            , <&key_physical_attrs 100 100  565  700       0     0     0>
            , <&key_physical_attrs 100 100  835  700       0     0     0>
            ;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <10>;
		rows = <7>;
		map = <
		RC(5,1)                                                                                         RC(5,6)
			RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)                  RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
			RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)                  RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
			RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)                  RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
			RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4)                  RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
			        RC(4,1) RC(4,2)                                                  RC(4,7) RC(4,8)
			                        RC(4,4)                                  RC(4,5)
			                            RC(4,3)                           RC(4,6)
			                                RC(5,0)                  RC(5,5)
		>;
	};

	kscan0: kscan0 {
		compatible = "zmk,kscan-composite";
		rows = <5>;
        columns = <10>;

        kscan_gpio0: kscan_gpio {
            kscan = <&kscan_gpio>;
			row-offset = <5>;
        };

        kscan_main0: main {
            kscan = <&kscan_main>;
        };
	};

	kscan_gpio: kscan_gpio {
		compatible = "zmk,kscan-gpio-direct";
		// label = "Toggle KSCAN";
        // toggle-mode;
		wakeup-source;
		input-gpios
			= <&gpio0 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // wake thumb
			, <&gpio0 30 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)> // encoder || r6
			;
	};

	kscan_main: kscan_main {
		compatible = "zmk,kscan-gpio-matrix";
		// label = "Main KSCAN";
		diode-direction = "col2row";
		wakeup-source;
		row-gpios
			= <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //r1
			, <&gpio1 6  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //r2
			, <&gpio0 9  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //r3
			, <&gpio1 4  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //r4
			, <&gpio1 2  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //r5
			// , <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //r6 // connected to ec11-push
			// , <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> //tr - unused
			;
		col-gpios
			= <&gpio1 10 GPIO_ACTIVE_HIGH> //c1
			, <&gpio0 3  GPIO_ACTIVE_HIGH> //c2
			, <&gpio0 28 GPIO_ACTIVE_HIGH> //c3
			, <&gpio1 13 GPIO_ACTIVE_HIGH> //c4
			, <&gpio0 2  GPIO_ACTIVE_HIGH> //c5
			//, <&gpio0 29 GPIO_ACTIVE_HIGH> //c6 - unused
			//, <&gpio1 2  GPIO_ACTIVE_HIGH> // connected to boot LED via 0ohm, desolder to enable
			;
	};

	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder &right_encoder>;
		triggers-per-rotation = <20>;
	};

	left_encoder: left_encoder {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <80>;
		status = "disabled";
	};

	right_encoder: right_encoder { // duplicate of left_encoder
		compatible = "alps,ec11";
		a-gpios = <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <80>;
		status = "disabled";
	};

	split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;

        trackball_peripheral_split: trackball_peripheral_split@0 {
            compatible = "zmk,input-split";
            reg = <0>;
        };
    };

	left_listener: left_listener {
        compatible = "zmk,input-listener";
        status = "disabled";
        input-processors = 
            <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,      // this gets it to the default installation orientation
            <&zip_xy_scaler 1 16>,       // multiply sensitivity by 1, divide by 3 (make it slower for scrolling)
            <&zip_xy_to_scroll_mapper>, // make this trackball output scrolling events by default instead of cursor movement
            <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>; // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.
    };

    right_listener: right_listener {
        compatible = "zmk,input-listener";
        status = "disabled";
        device = <&trackball_peripheral_split>;
        input-processors =
				<&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
        //    <&zip_x_scaler 4 1>;
			//<&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>; // this gets it to the default installation orientation
            //,<&zip_temp_layer 3 500>;                 // activate layer 3 within 500ms of the trackball moving
    };
};

&pinctrl {
	led_default: led_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 25)>, // unconnected
					<NRF_PSEL(SPIM_MOSI, 0, 26)>;
		};
	};
	led_sleep: led_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 25)>, // unconnected
					<NRF_PSEL(SPIM_MOSI, 0, 26)>;
			low-power-enable;
		};
	};

	screen_default: screen_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK,  0, 8)>,
					<NRF_PSEL(SPIM_MOSI, 0, 6)>,
					<NRF_PSEL(SPIM_MISO, 0, 27)> //unconnected
				;
		};
	};

	screen_sleep: screen_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK,  0, 8)>,
					<NRF_PSEL(SPIM_MOSI, 0, 6)>,
					<NRF_PSEL(SPIM_MISO, 0, 27)> //unconnected
				;
			low-power-enable;
		};
	};

	trackball_default: trackball_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK,  0, 5)>,
					<NRF_PSEL(SPIM_MOSI, 0, 15)>,
					<NRF_PSEL(SPIM_MISO, 0, 15)>;
		};
	};

	trackball_sleep: trackball_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK,  0, 5)>,
					<NRF_PSEL(SPIM_MOSI, 0, 15)>,
					<NRF_PSEL(SPIM_MISO, 0, 15)>;
			low-power-enable;
		};
	};
};

// SPI0 is shared with I2C0, only one can be enabled. Start with SPI1
&spi1 {
	status = "okay";
	compatible = "nordic,nrf-spim";

	pinctrl-0 = <&led_default>;
	pinctrl-1 = <&led_sleep>;
	pinctrl-names = "default", "sleep";

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		chain-length = <25>;
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;

		color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
	};
};

nice_view_spi: &spi2 {
	status = "okay";
	compatible = "nordic,nrf-spim";
	
	pinctrl-0 = <&screen_default>;
	pinctrl-1 = <&screen_sleep>;
	pinctrl-names = "default", "sleep";
	cs-gpios = <&gpio1 9 GPIO_ACTIVE_HIGH>;

	// screen: ls0xx@0 {
	// 	compatible = "sharp,ls0xx";
	// 	// label = "DISPLAY";
	// 	spi-max-frequency = <2000000>;
	// 	reg = <0>;
	// 	width = <160>;
	// 	height = <68>;
	// };
};

// &spi3 {
// 	status = "okay";
// 	compatible = "nordic,nrf-spim";
// 	pinctrl-0 = <&trackball_default>;
// 	pinctrl-1 = <&trackball_sleep>;
// 	pinctrl-names = "default", "sleep";
// 	cs-gpios = <&gpio0 4 GPIO_ACTIVE_LOW>;  //"sel2"

// 	trackball: trackball@0 {
// 		status = "okay";
// 		compatible = "pixart,pmw3610";
// 		reg = <0>;
// 		spi-max-frequency = <2000000>;
// 		irq-gpios = <&gpio1 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
// 		cpi = <600>;
// 		evt-type = <INPUT_EV_REL>;
// 		x-input-code = <INPUT_REL_X>;
// 		y-input-code = <INPUT_REL_Y>;
// 	};
// };
